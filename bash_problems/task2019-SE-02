#!/bin/bash

if [ $# -eq 0 ]
then
	echo "Wrong usage! Correct usage: $0 [-n N] FILE1 FILE2 ... FILEN"
	exit 1
fi

old_IFS=$IFS
hasN=0
intRegex="^[0-9]+$"

if [ $1 = "-n" ]
then
	if ! [[ $2 =~ $intRegex ]]
	then
		echo "Second argument (the one after -n) must be a number!"
		exit 1
	elif [ $# -eq 2 ]
	then
		echo "You must provide n .log files after -n N"
		exit 1
	fi

	hasN=1
fi

counter=0
startIndex=1
timeRegex="^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}"
allLines=()

declare -A files

for file in $@
do
	if [ $counter -gt $startIndex ] || [ $hasN -eq 0 ]
	then
		if ! [ -e $file ]
		then
			echo "File $file does not exist"
			exit 1
		fi

		if ! [ -f $file ]
		then
			echo "Argument is a not a regular file"
		fi

		if [ $hasN -eq 0 ]
		then
			files[$file]=$(cat $file | tail)
		else
			files[$file]=$(cat $file | tail -n $2)
		fi
	fi

	counter=$(($counter+1))
done

for file in "${!files[@]}"
do
	while read -r line
	do
		time=$(echo $line | egrep -o "$timeRegex")
		data=$(echo $line | sed "s/$time //")
		allLines+=("$time $file $data")
	done <<< "${files[$file]}"
done

# add sort
